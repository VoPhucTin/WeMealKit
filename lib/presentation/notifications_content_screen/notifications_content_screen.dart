import 'package:flutter/material.dart';
import 'package:wemealkit/core/app_export.dart';
import 'package:wemealkit/widgets/app_bar/appbar_leading_image.dart';
import 'package:wemealkit/widgets/app_bar/appbar_title.dart';
import 'package:wemealkit/widgets/app_bar/custom_app_bar.dart';
import 'package:wemealkit/widgets/custom_elevated_button.dart';

// ignore: must_be_immutable
class NotificationsContentScreen extends StatelessWidget {
  NotificationsContentScreen({Key? key})
      : super(
          key: key,
        );

  GlobalKey<NavigatorState> navigatorKey = GlobalKey();

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        appBar: _buildAppBar(context),
        body: Container(
          width: double.maxFinite,
          padding: EdgeInsets.symmetric(
            horizontal: 24.h,
            vertical: 6.v,
          ),
          child: Column(
            children: [
              CustomImageView(
                imagePath: ImageConstant.imgRectangle65,
                height: 171.v,
                width: 327.h,
                radius: BorderRadius.circular(
                  8.h,
                ),
              ),
              SizedBox(height: 22.v),
              SizedBox(
                width: 323.h,
                child: Text(
                  "üó£Ô∏è ICC t·∫∑ng b·∫°n g√≥i khuy·∫øn m√£i th√°ng 6 kh·ªïng l·ªì gi·∫£m ƒë·∫øn 150k!!!\nüì¢ M·ªôt s·ªë th√¥ng tin c·∫ßn l∆∞u √Ω n√®:\nüéÅ G√≥i g·ªìm coupon gi·∫£m 50k x 4 l·∫ßn s·ª≠ d·ª•ng, ri√™ng l·∫ßn s·ª≠ d·ª•ng ƒë·∫ßu s·∫Ω gi·∫£m 15% t·ªëi thi·ªÉu 50k t·ªëi ƒëa 150k.üéÅ Coupon √°p d·ª•ng cho t·∫•t c·∫£ c·ª≠a h√†ng cho ƒë∆°n t·ª´ 0 ƒë·ªìng.üéÅ Coupon ch·ªâ √°p d·ª•ng trong th√°ng 6.üéÅ T·∫≠n h∆∞·ªüng v√¥ v√†n ∆∞u ƒë√£i h·∫•p d·∫´n kh√°c ch·ªâ d√†nh ri√™ng cho ng∆∞·ªùi d√πng th√¢n thi·∫øt.",
                  maxLines: 12,
                  overflow: TextOverflow.ellipsis,
                  style: theme.textTheme.bodyMedium!.copyWith(
                    height: 1.45,
                  ),
                ),
              ),
              SizedBox(height: 22.v),
              CustomElevatedButton(
                text: "S·ª≠ d·ª•ng ngay",
                buttonStyle: CustomButtonStyles.fillOrange,
              ),
              SizedBox(height: 59.v),
            ],
          ),
        ),
        // bottomNavigationBar: _buildBottomBar(context),
        // floatingActionButton: CustomFloatingButton(
        //   height: 56,
        //   width: 56,
        //   backgroundColor: appTheme.orange700,
        //   child: CustomImageView(
        //     imagePath: ImageConstant.imgThumbsUpOnerrorcontainer,
        //     height: 28.0.v,
        //     width: 28.0.h,
        //   ),
        // ),
        // floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
      ),
    );
  }

  // /// Section Widget
  PreferredSizeWidget _buildAppBar(BuildContext context) {
    return CustomAppBar(
      leadingWidth: 48.h,
      leading: AppbarLeadingImage(
        imagePath: ImageConstant.imgArrowDown,
        margin: EdgeInsets.only(
          left: 24.h,
          top: 13.v,
          bottom: 18.v,
        ),
        onTap: (){
          Navigator.pop(context);
        },
      ),
      centerTitle: true,
      title: AppbarTitle(
        text: "Th√¥ng b√°o",
      ),
    );
  }

  // /// Section Widget
  // Widget _buildBottomBar(BuildContext context) {
  //   return CustomBottomAppBar(
  //     onChanged: (BottomBarEnum type) {
  //       Navigator.pushNamed(
  //           navigatorKey.currentContext!, getCurrentRoute(type));
  //     },
  //   );
  // }

  // ///Handling route based on bottom click actions
  // String getCurrentRoute(BottomBarEnum type) {
  //   switch (type) {
  //     case BottomBarEnum.Userorange70024x24:
  //       return AppRoutes.HomePage;
  //     case BottomBarEnum.Reply:
  //       return AppRoutes.discoverThreePage;
  //     case BottomBarEnum.Cart:
  //       return "/";
  //     case BottomBarEnum.Lockbluegray300:
  //       return AppRoutes.accountContainerPage;
  //     default:
  //       return "/";
  //   }
  // }

  // ///Handling page based on route
  // Widget getCurrentPage(String currentRoute) {
  //   switch (currentRoute) {
  //     case AppRoutes.HomePage:
  //       return HomePage();
  //     case AppRoutes.discoverThreePage:
  //       return DiscoverThreePage();
  //     case AppRoutes.accountContainerPage:
  //       return AccountContainerPage();
  //     default:
  //       return DefaultWidget();
  //   }
  // }
}
